openapi: 3.0.3
info:
  title: E-Commerce API
  version: 1.0.0
  description: API documentation for E-Commerce system.

servers:
  - url: https://e-commerce-product-order-tracker-production.up.railway.app/api/v1
    description: Production server

tags:
  - name: Auth
    description: Authentication endpoints
  - name: Products
    description: Manage and browse products
  - name: Orders
    description: Manage customer and admin orders

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Role:
      type: object
      properties:
        id:
          type: string
          description: MongoDB ObjectId
        name:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          $ref: '#/components/schemas/Role'

    ProductCategory:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    ProductPublic:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          $ref: '#/components/schemas/ProductCategory'
        description:
          type: string
        price:
          type: number
          format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        imageURL:
          type: string

    Product:
      allOf:
        - $ref: '#/components/schemas/ProductPublic'
        - type: object
          properties:
            stock:
              type: integer

    Status:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    OrderLine:
      type: object
      properties:
        id:
          type: string
        product:
          $ref: '#/components/schemas/ProductPublic'
        quantity:
          type: integer
        priceSnapshot:
          type: number
          format: float

    OrderWithUser:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/User'
        status:
          $ref: '#/components/schemas/Status'
        total:
          type: number
          format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        orderLines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'

    OrderWithoutUser:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        total:
          type: number
          format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        orderLines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'

paths:
  /auth/register:
    post:
      tags: [Auth]
      summary: Create account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, email, password]
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Account created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /auth/login:
    post:
      tags: [Auth]
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT token with user info
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /products:
    get:
      tags: [Products]
      summary: List products
      parameters:
        - in: query
          name: categoryID
          schema:
            type: string
      responses:
        '200':
          description: Product list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductPublic'

    post:
      security:
        - bearerAuth: []
      tags: [Products]
      summary: Create product (Admin only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created

  /products/{id}:
    get:
      tags: [Products]
      summary: Get product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPublic'

    patch:
      security:
        - bearerAuth: []
      tags: [Products]
      summary: Update product (Admin only)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated

    delete:
      security:
        - bearerAuth: []
      tags: [Products]
      summary: Delete product (Admin only)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted

  /orders:
    post:
      security:
        - bearerAuth: []
      tags: [Orders]
      summary: Place order (Customer only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required: [productID, quantity]
                properties:
                  productID:
                    type: string
                  quantity:
                    type: integer
      responses:
        '201':
          description: Order placed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWithoutUser'

    get:
      security:
        - bearerAuth: []
      tags: [Orders]
      summary: List all orders (Admin only)
      responses:
        '200':
          description: All orders with user info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderWithUser'

  /orders/me:
    get:
      security:
        - bearerAuth: []
      tags: [Orders]
      summary: List current user's orders
      responses:
        '200':
          description: My orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderWithoutUser'

  /orders/{id}/status:
    patch:
      security:
        - bearerAuth: []
      tags: [Orders]
      summary: Update order status (Admin only)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status updated
